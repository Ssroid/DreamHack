x86 : 바이너리 파일 이라고 생각 보통은 32bit

x86의 아키텍처는 레지스터가 적기 떄문에 스택을 이용하여 인자를 레지스터로 전달하고 
x86-64 아키텍처는 레지스터가 많기 때문에 적은 인자는 바로 레지스터로 전달하지만
많은 인자의 경우에는 스택을 이용하여 함.

C언어를 컴파일 할때 윈도우 에서는 MSVC, 리눅스에서는 주로 gcc를 많이 이용하지.

컴파일 : 어떤 언어로 작성된 소스코드 (C언어 ,자바언어 , python) 을 다른 언어의 목적코드로 번역
주로 어셈블리어나 기계어로 번역하는것을 컴파일이라한다.

C언어를 바이너리로 만드는 과정을 전처리->컴파일->어셈블->링크 로 구분하는데 이를 합쳐서 
그냥 컴파일이라고도 한다.

SYSV
리눅스는 SYSTEM V 를 기반으로 만들어졌습니다. 
$ file /bin/[명령어] #하면은 해당 명령어의 바이너리를 알수있다.
SYSV의 함수 호출 규약은 
1. 6개의 인자 rdi, rsi, rdx, rcx, r8, r9 에 순서대로 저장하여 전달 더많은 인자는 스택에
2. caller에서 인자전달에 사용된 스택을 정리 #아직 먼뜻인지 잘모르겠다.
3. 함수의 반환 값은 rax에 전달
