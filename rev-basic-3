
핵심 if 함수구문
if ( byte_140003000[i] != (i ^ *(unsigned __int8 *)(a1 + i)) + 2 * i )

왠지 모르지만 *(unsigned __int8 *)(a1 + i) 이것은 내가 입력받은 것의 위치 부분인것이고?

쩃든 (입력위치^i) + 2*i = flag[i]
와 같아야한다.
flag는 
49 60 67 74 63 67 42 66  80 78 69 69 7B 99 6D 88
68 94 9F 8D 4D A5 9D 45  00 00 00 00 00 00 00 00

I`gtcgBf.xii{.m

(flag[i] - 2*i )를 하고 그 값이 ^i와 같으면 됨 
결론 : (flag[i] - 2*i )^i 를 하면 원래 문자가 복원

비트연산은 두번하면은 원본상태로 복원

파이썬코드
-----
for i in range(0,24) :
    a = int(input("16숫자: "), 16)
    a = a - i*2
    a = a^i
    ch = chr(a)
    print(ch)
----- 일일히 대입

I_am_X0_xo_n?^bEdl{4if?
먼가 이상하다.


코드수정
-----
arr = [0x49, 0x60, 0x67, 0x74, 0x63, 0x67, 0x42, 0x66,0x80, 0x78, 0x69, 0x69, 0x7B, 0x99, 0x6D, 0x88,
0x68, 0x94, 0x9F, 0x8D, 0x4D, 0xA5, 0x9D, 0x45]  #16진수의 경우 리스트에 0x 추가하기

for i in range(0,24) :
    a = arr[i] - i*2
    a = a^i
    ch = chr(a)
    print(ch, end='') # 개행문자없이 출력하는 방법
------
$ I_am_X0_xo_Xor_eXcit1ng 


#### 다른사람풀이
enc_keys = ['0x49', '0x60', '0x67', '0x74', '0x63', '0x67', '0x42', '0x66', '0x80', '0x78', '0x69', '0x69', '0x7B', '0x99', '0x6D', '0x88', '0x68', '0x94', '0x9F', '0x8D', '0x4D', '0xA5', '0x9D', '0x45']
plain_keys = []
for index, key in enumerate(enc_keys):   #enumerate 를 하면은 index를 추가해줘서 마치 C언어로 i와 해당 값을 같이 쓸수있다. 편함
    value = (int(key, 16) - 2 * index) ^ index
    plain_keys.append(chr(value))

print (''.join(plain_keys))

